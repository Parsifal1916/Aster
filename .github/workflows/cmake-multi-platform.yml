name: Build and Test Aster Library

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Debug]

    steps:
    - uses: actions/checkout@v4

    - name: Setup dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libsfml-dev catch2

   - name: Setup dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        brew install sfml catch2
        echo "SFML_DIR=/opt/homebrew/opt/sfml/lib/cmake/SFML" >> $GITHUB_ENV
        echo "CMAKE_PREFIX_PATH=/opt/homebrew/opt/sfml:/opt/homebrew/opt/catch2" >> $GITHUB_ENV

    - name: Configure CMake (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
              -DSFML_DIR=${{ env.SFML_DIR }} \
              -DCMAKE_PREFIX_PATH=${{ env.CMAKE_PREFIX_PATH }}

    - name: Configure CMake (non-macOS)
      if: matrix.os != 'macos-latest'
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ${{ matrix.os == 'windows-latest' && '-DCMAKE_TOOLCHAIN_FILE=$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake' || '' }}

    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}

    - name: Test
      working-directory: build
      shell: bash
      run: |
        ctest -C ${{ matrix.build_type }} --output-on-failure

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ matrix.os }}-${{ matrix.build_type }}
        path: build